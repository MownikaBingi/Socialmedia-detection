# -*- coding: utf-8 -*-
"""twitter_scraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OK_D5xCcD9QCjmL9ByG7CMhAy3Qu-PKH
"""

pip install ntscraper

from ntscraper import Nitter
scraper = Nitter(0)
scraper.get_profile_info('003_ssk')

from ntscraper import Nitter

# Initialize the Nitter scraper
scraper = Nitter(0)

# Specify the username for which you want to fetch profile information
target_username = '@21501a0583'

# Fetch profile information
profile_info = scraper.get_profile_info(target_username)

# Display the profile information
print("Profile Information:")
print(profile_info)

# Extract required features
followers_count = profile_info['stats']['followers']
following_count = profile_info['stats']['following']
posts_count = profile_info['stats']['tweets']
profile_pic_url = profile_info['image']
description = profile_info['bio']
url = 1  # Set to 1 or 0 as needed (random in this example)

# Calculate the length of the description
description_length = len(description)

# Display the extracted features
print(f"Followers Count: {followers_count}")
print(f"Following Count: {following_count}")
print(f"Posts Count: {posts_count}")
print(f"Profile Picture URL: {profile_pic_url}")
print(f"Description: {description}")
print(f"Description Length: {description_length}")
print(f"URL: {url}")

from ntscraper import Nitter

# Initialize the Nitter scraper
scraper = Nitter(0)

# Specify the username for which you want to fetch profile information
target_username = '@AkhilaNidumolu'

# Fetch profile information
profile_info = scraper.get_profile_info(target_username)

# Display the profile information
print("Profile Information:")
print(profile_info)

# Check if profile_info is not None before extracting features
if profile_info is not None:
    # Extract required features
    followers_count = profile_info['stats']['followers']
    following_count = profile_info['stats']['following']
    posts_count = profile_info['stats']['tweets']
    profile_pic_url = profile_info['image']
    description = profile_info['bio']
    url = 1  # Set to 1 or 0 as needed (random in this example)

    # Calculate the length of the description
    description_length = len(description)

    # Display the extracted features
    print(f"Followers Count: {followers_count}")
    print(f"Following Count: {following_count}")
    print(f"Posts Count: {posts_count}")
    print(f"Profile Picture URL: {profile_pic_url}")
    print(f"Description: {description}")
    print(f"Description Length: {description_length}")
    print(f"URL: {url}")
else:
    # Assign default values if profile_info is None
    followers_count = 0
    following_count = 0
    posts_count = 0
    profile_pic_url = None  # You can set a default URL if needed
    description = ""
    description_length = 0
    url = 0

    print("Profile information is None. Default values assigned.")
    print(f"Followers Count: {followers_count}")
    print(f"Following Count: {following_count}")
    print(f"Posts Count: {posts_count}")
    print(f"Profile Picture URL: {profile_pic_url}")
    print(f"Description: {description}")
    print(f"Description Length: {description_length}")
    print(f"URL: {url}")

from ntscraper import Nitter

# Initialize the Nitter scraper
scraper = Nitter(0)

# Specify the username for which you want to fetch profile information
target_username = '@21501a0583'

# Fetch profile information
profile_info = scraper.get_profile_info(target_username)

# Display the profile information
print("Profile Information:")
print(profile_info)

# Check if profile_info is not None before extracting features
if profile_info is not None:
    # Extract required features
    followers_count = profile_info['stats']['followers'] if 'stats' in profile_info and 'followers' in profile_info['stats'] else 0
    following_count = profile_info['stats']['following'] if 'stats' in profile_info and 'following' in profile_info['stats'] else 0
    posts_count = profile_info['stats']['tweets'] if 'stats' in profile_info and 'tweets' in profile_info['stats'] else 0
    profile_pic_url = profile_info['image'] if 'image' in profile_info else None
    description = profile_info['bio'] if 'bio' in profile_info else ""
    url = 1  # Set to 1 or 0 as needed (random in this example)

    # Calculate the length of the description
    description_length = len(description)

    # Display the extracted features
    print(f"Followers Count: {followers_count}")
    print(f"Following Count: {following_count}")
    print(f"Posts Count: {posts_count}")
    print(f"Profile Picture URL: {profile_pic_url}")
    print(f"Description: {description}")
    print(f"Description Length: {description_length}")
    print(f"URL: {url}")
else:
    # Assign default values if profile_info is None
    followers_count = 0
    following_count = 0
    posts_count = 0
    profile_pic_url = None  # You can set a default URL if needed
    description = ""
    description_length = 0
    url = 0

    print("Profile information is None. Default values assigned.")
    print(f"Followers Count: {followers_count}")
    print(f"Following Count: {following_count}")
    print(f"Posts Count: {posts_count}")
    print(f"Profile Picture URL: {profile_pic_url}")
    print(f"Description: {description}")
    print(f"Description Length: {description_length}")
    print(f"URL: {url}")



scraper.get_profile_info('DhanusriNakkina')